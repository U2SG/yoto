name: Advanced CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # 代码质量检查 - 并行运行
  linting:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        cache: 'pip'
        
    - name: Install development dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev-simple.txt
        
    - name: Run code formatting check
      run: |
        black --check .
        
    - name: Run code quality check
      run: |
        flake8 . --count --show-source --statistics
        
    - name: Run import sorting check
      run: |
        isort --check-only --diff .
        
    - name: Run security check
      run: |
        bandit -r yoto_backend/ -f json -o bandit-report.json || true

  # 测试 - 多Python版本矩阵构建
  testing:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
        database: [mysql]
        
    services:
      mysql:
        image: mysql:8-alpine
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: yoto_test_db
          MYSQL_USER: yoto_test_user
          MYSQL_PASSWORD: yoto_test_password
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        ports:
          - 3306:3306
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        ports:
          - 6379:6379

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Install development dependencies
      run: |
        pip install -r requirements-dev-simple.txt
        
    - name: Run tests
      env:
        DATABASE_URI: mysql+pymysql://yoto_test_user:yoto_test_password@127.0.0.1:3306/yoto_test_db
        TEST_DATABASE_URI: mysql+pymysql://yoto_test_user:yoto_test_password@127.0.0.1:3306/yoto_test_db
        REDIS_URL: redis://127.0.0.1:6379/0
        CELERY_BROKER_URL: redis://127.0.0.1:6379/0
        CELERY_RESULT_BACKEND: redis://127.0.0.1:6379/0
        FLASK_ENV: testing
      run: |
        cd yoto_backend
        pytest --cov=app --cov-report=xml --cov-report=term-missing -v
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./yoto_backend/coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  # 集成测试 - 单独运行
  integration:
    runs-on: ubuntu-latest
    needs: [linting, testing]
    
    services:
      mysql:
        image: mysql:8-alpine
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: yoto_integration_db
          MYSQL_USER: yoto_integration_user
          MYSQL_PASSWORD: yoto_integration_password
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        ports:
          - 3306:3306
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        ports:
          - 6379:6379

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Install development dependencies
      run: |
        pip install -r requirements-dev-simple.txt
        
    - name: Run integration tests
      env:
        DATABASE_URI: mysql+pymysql://yoto_integration_user:yoto_integration_password@127.0.0.1:3306/yoto_integration_db
        TEST_DATABASE_URI: mysql+pymysql://yoto_integration_user:yoto_integration_password@127.0.0.1:3306/yoto_integration_db
        REDIS_URL: redis://127.0.0.1:6379/0
        CELERY_BROKER_URL: redis://127.0.0.1:6379/0
        CELERY_RESULT_BACKEND: redis://127.0.0.1:6379/0
        FLASK_ENV: testing
      run: |
        cd yoto_backend
        pytest tests/integration/ --cov=app --cov-report=xml --cov-report=term-missing -v -m integration

  # 性能测试 - 可选运行
  performance:
    runs-on: ubuntu-latest
    needs: [linting, testing]
    if: github.event_name == 'pull_request'
    
    services:
      mysql:
        image: mysql:8-alpine
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: yoto_perf_db
          MYSQL_USER: yoto_perf_user
          MYSQL_PASSWORD: yoto_perf_password
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        ports:
          - 3306:3306
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        ports:
          - 6379:6379

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Install development dependencies
      run: |
        pip install -r requirements-dev-simple.txt
        
    - name: Run performance tests
      env:
        DATABASE_URI: mysql+pymysql://yoto_perf_user:yoto_perf_password@127.0.0.1:3306/yoto_perf_db
        TEST_DATABASE_URI: mysql+pymysql://yoto_perf_user:yoto_perf_password@127.0.0.1:3306/yoto_perf_db
        REDIS_URL: redis://127.0.0.1:6379/0
        CELERY_BROKER_URL: redis://127.0.0.1:6379/0
        CELERY_RESULT_BACKEND: redis://127.0.0.1:6379/0
        FLASK_ENV: testing
      run: |
        cd yoto_backend
        pytest tests/performance/ --benchmark-only -v -m performance || true 