name: Continuous Integration Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Install development dependencies
      run: |
        pip install -r requirements-dev-simple.txt
        
    - name: Run code formatting check
      run: |
        black --check .
        
    - name: Run code quality check
      run: |
        flake8 . --count --show-source --statistics
        
    - name: Run import sorting check
      run: |
        isort --check-only --diff .
        
    - name: Run security check
      run: |
        bandit -r yoto_backend/ -f json -o bandit-report.json || true
        
    # 暂时注释掉测试步骤，等测试套件完善后再启用
    # - name: Run tests
    #   env:
    #     DATABASE_URI: mysql+pymysql://yoto_test_user:yoto_test_password@mysql:3306/yoto_test_db
    #     TEST_DATABASE_URI: mysql+pymysql://yoto_test_user:yoto_test_password@mysql:3306/yoto_test_db
    #     REDIS_URL: redis://redis:6379/0
    #     CELERY_BROKER_URL: redis://redis:6379/0
    #     CELERY_RESULT_BACKEND: redis://redis:6379/0
    #     FLASK_ENV: testing
    #   run: |
    #     cd yoto_backend
    #     pytest --cov=app --cov-report=xml --cov-report=term-missing -v
        
    # - name: Upload coverage to Codecov
    #   uses: codecov/codecov-action@v4
    #   with:
    #     file: ./yoto_backend/coverage.xml
    #     flags: unittests
    #     name: codecov-umbrella
    #     fail_ci_if_error: false 